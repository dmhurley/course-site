<div id="timer">
	<table style="display:none;">
		<tr>
			<td rowspan=2 id="handle"></td>
			<td id="ttLate" class="timer"></td>
		</tr>
		<tr>
			<td id="ttEnd" class="timer"></td>
		</tr>
	</table>
	<div class="message">
		<h5>Error</h5>
		<p>Your javascript is disabled or there was an error. Finish the test before {{endTime|date('h:i a')}}</p>
	</div>
		<style>
			#timer .message {
				padding: 10px;
				width: 180px;
			}

			#timer .message p {
				margin-bottom: 0px;
			}

			#timer {
				position: fixed;
				right: -100px;
				top: 100px;
				background-color: white;
				border: 7px solid rgb(200,200,200);
				border-right:none;
				border-top-left-radius: 25px;
				border-bottom-left-radius: 25px;
				font-size: 20pt;
				width:300px;
				transition: right .3s, border-color 1s;
				-webkit-transition: right .3s, border-color 1s;
				-moz-transition: right .3s, border-color 1s;
				user-select:none;
				-webkit-user-select:none;
				-moz-user-select:none;
				cursor: default;
				z-index:12;
			}
			#timer.hidden {
				right: -280px;
			}
			#timer.warning {
				border-color: yellow;
			}
			#timer.alert {
				border-color:red !important;
			}
				#timer table {
					margin:5px;
				}
				#timer #handle {
					width:15px;
					background-color:rgba(0,0,0,.1);
					border-radius: 10px 0px 0px 10px;
					cursor:e-resize;
				}
				#timer.hidden #handle {
					cursor:w-resize;
				}

				#timer .timer {
					display:block;
					padding:10px 15px;
				}

				#timer .timer:after {
					font-size:9pt;
					color: gray;
					position:relative;
					padding-left:10px;
				}
				#timer #ttLate:after {
					content:"until late";
				}
				#timer #ttEnd:after {
					content:"until end";
				}

				#timer .timer.hidden {
					padding-top:0px;
					padding-bottom:0px;
					height: 0px;
					line-height: 0px;
					overflow:hidden;
				}
				#timer.pulse {
					animation: pulse .5s infinite;
					-webkit-animation: pulse .5s infinite;
					-moz-animation: pulse .5s infinite;
					-ms-animation: pulse .5s infinite;
					-o-animation: pulse .5s infinite;
				}

				@-webkit-keyframes pulse {
					0% {border-color:rgb(210,14,10);}
					50% {border-color:rgb(252,220,20);}
					100% {border-color:rgb(210,14,10);}
				}
				@-moz-keyframes pulse {
					0% {border-color:rgb(210,14,10);}
					50% {border-color:rgb(252,220,20);}
					100% {border-color:rgb(210,14,10);}
				}
				@-ms-keyframes pulse {
					0% {border-color:rgb(210,14,10);}
					50% {border-color:rgb(252,220,20);}
					100% {border-color:rgb(210,14,10);}
				}
				@-o-keyframes pulse {
					0% {border-color:rgb(210,14,10);}
					50% {border-color:rgb(252,220,20);}
					100% {border-color:rgb(210,14,10);}
				}
				@keyframes pulse {
					0% {border-color:rgb(210,14,10);}
					50% {border-color:rgb(252,220,20);}
					100% {border-color:rgb(210,14,10);}
				}
		</style>
		<script>
		(function() {
			function Timer(secondsLate, secondsEnd) {
				this.late = new Date(new Date().valueOf() + secondsLate*1000);
				this.end = new Date(new Date().valueOf() + secondsEnd*1000);
				this.lateWarning = false;
				this.endWarning = false;
				this.updateTime = function() {
						var now = new Date();

						var ttLate = (this.late.valueOf() - now.valueOf())/1000/60;
						var ttEnd = (this.end.valueOf() - now.valueOf())/1000/60;

						if (ttLate > ttEnd) {
							document.getElementById('ttLate').className += ' hidden';
							ttLate = ttEnd;
						}

						if (ttLate < 1 && !this.endWarning) {
							var div = document.getElementById('timer');
							div.className += ' alert';
							div.className = div.className.replace('hidden', '');
							this.endWarning = true;
						} else if (ttLate < 5 && !this.lateWarning && !this.endWarning) {
							var div = document.getElementById('timer');
							div.className += ' warning';
							div.className = div.className.replace('hidden', '');
							this.lateWarning = true;
						}

						var htLate = Math.floor(Math.abs(ttLate/60));
						var mtLate = Math.floor(Math.abs(ttLate%60));
						var stLate = Math.floor(Math.abs(ttLate%1*60));
						var lneg = ttLate > 0?'':'-'
						document.getElementById('ttLate').innerHTML = lneg + htLate + ":" + mtLate + ":" + (stLate<10?"0"+stLate:stLate);

						var htEnd = Math.floor(Math.abs(ttEnd/60));
						var mtEnd = Math.floor(Math.abs(ttEnd%60));
						var stEnd = Math.floor(Math.abs(ttEnd%1*60));
						if (ttEnd < 0) {
							var timer = document.getElementById('timer');
							timer.className += ' pulse';
							timer.className = timer.className.replace('hidden', '');
							clearInterval(this.interval);
							document.getElementById('ttEnd').innerHTML = '0:0:00';
						} else {
							document.getElementById('ttEnd').innerHTML = htEnd + ":" + mtEnd + ":" + (stEnd<10?"0"+stEnd:stEnd);
						}
					}
				this.interval = setInterval(
						(function(self) {
							return function() {
								try {	
									self.updateTime();
								} catch (e) {
									handleError();
								}
							}
						})(this), 500);
				this.updateTime();

				this.clearInterval = function() {
					if (this.interval) {
						clearInterval(this.interval);
					}
				}
			}
			var timer;
			function handleError() {
				timer.clearInterval();
				document.querySelector('#timer table').style.display = 'none';
				document.querySelector('#timer .message').style.display = 'block';

			}

			window.addEventListener('error', handleError);

			window.addEventListener('load', function() {
				timer = new Timer({{late}}, {{end}});
				document.querySelector('#timer table').style.display = 'block';
				document.querySelector('#timer .message').style.display = 'none';

				document.getElementById('handle').addEventListener('click', function(event) {
					var timer = document.getElementById('timer');
					if (timer.className.indexOf('hidden') > -1) {
						timer.className = timer.className.replace('hidden', '');
					} else {
						timer.className += ' hidden';
					}
				});
			});
		})();
	</script>
</div>
