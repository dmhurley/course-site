{% extends 'BioExamBundle:Public:main.html.twig' %}

{% block content %}
	<div id="schedule" class="tableStyle">
		<table>
			<thead>
				<tr>
					<th>Exam</th>
					<th>Test</th>
					<th>Grade</th>
				</tr>
			</thead>
			<tbody>
				{% for e in exams[:3] %}
					<tr>
						<td>{{e.title}}</td>
						<td>{{e.tDate|date('m/d')}} - {{e.tStart|date('h:i a')}} to {{e.tEnd|date('h:i a')}}</td>
						<td>{{e.gDate|date('m/d')}} - {{e.gStart|date('h:i a')}} to {{e.gEnd|date('h:i a')}}</td>
					</tr>
				{% else %}
					<tr>
						<td colspan=3 style="text-align:center;">none scheduled</td>
					</tr>
				{% endfor %}
			</tbody>
		</table>
	</div>
	<p>{{global.rules}}</p>

	{% if message != null %}
		<p>{{message}}</p>
	{% endif %}

	{% if exam != null %}

		<p>You can begin {{exam.title}} <b><span id="time"></span></b>.</p>

		<p>Once you begin you will have {{exam.tDuration}} minutes or until {{exam.tEnd|date('h:i a')}} to complete it. Grading will begin 
		{% if date(exam.tDate|date('Y-m-d')~' '~exam.tStart|date('H:i:s')) >= date(exam.gDate|date('Y-m-d')~' '~exam.gStart|date('H:i:s')) %}
			after you finish the test
		{% else %}
			{{exam.gDate|date('m/d')}} at {{exam.gStart|date('h:i a')}}
		{% endif %} 
		and lasts for {{exam.gDuration}} minutes or until {{exam.gEnd|date('h:i a')}}.</p>

	<div id="hidden" style="display:none;">
		{{ form(form) }}
	</div>
	{% endif %}
	<br />
	<hr />

	<h1>Review Old Tests</h1>
	<p>Look at your responses, scores, and the actual answers for all past tests. If you have just taken an exam, results will be unavailable until 12 hours after the grading period has ended.</p>

	<ul>
		{% for taker in takers if date(taker.exam.gDate|date('Y-m-d') ~ ' ' ~ taker.exam.gEnd|date('H:i:s')) < date('-12 hours') %}
			{% if taker.gradedBy|length == 0 %}
				<li><a href="{{path('review_exam', {'id':taker.exam.id}) }}">{{taker.exam.title}}</a> - (ungraded)
			{% else %}
				{% set outOf = 0%}
				{% set totalMean = 0 %}

				{% for answer in taker.answers %}
					{% set outOf = outOf+answer.question.points %}

					{% set questionTotal = 0 %}

					{% for grade in answer.grades %}
						{% set questionTotal = questionTotal+grade.points %}
					{% endfor %}

					{% set totalMean = totalMean + questionTotal/answer.grades|length %}
				{% endfor %}

				<li><a href="{{path('review_exam', {'id':taker.exam.id}) }}">{{taker.exam.title}}</a> - ({{totalMean|number_format(2, '.', ',')}}/{{outOf|number_format(2)}})</li>
			{% endif %}
		{% endfor %}
	</ul>
{% endblock %}

{% block java %}
	{% if exam != null %}
		<script>
			function Pinger(time) {
				this.date = new Date(time*1000);
				this.updatePage = function() {
						var now = new Date();
						var diff = this.date.valueOf() - now.valueOf();
						document.getElementById('time').innerHTML = msToText(diff);
						if (diff < 0) {
							clearInterval(this.interval);
							document.getElementById('hidden').style.display="block";
						}
					}

				// start interval then call once immediately.
				this.interval = setInterval(
					(function(self) {
						return function() {
							self.updatePage();
						}
					})(this), 10000);
				this.updatePage();
			}

			function msToText(ms) {
				if (ms <= 0) {
					return "now";
				} else if (ms < 1000 * 60) {
					return 'in less than 1 minute';
				}

				var hours = ms/1000/60/60;
				ms = ms%(1000*60*60);
				var minutes = ms/1000/60;

				var string = "in approximately ";
				if (Math.floor(hours) > 1) {
					string+=Math.floor(hours) + " hours, and ";
				} else if (Math.floor(hours) === 1) {
					string+="1 hour, and ";
				}

				if (Math.floor(minutes) !== 1) {
					string+=Math.floor(minutes) + " minutes";
				} else {
					string+="1 minute";
				}

				return string;
			}

			new Pinger("{{ date(exam.tDate|date('Y-m-d ')~exam.tStart|date('H:i:s'))|date('U') }}");
		</script>
	{% endif %}
{% endblock %}
