{% extends 'BioPublicBundle:Template:rowForm.html.twig' %}

{% block head %}
	{{ parent() }}
	{% stylesheets 'bundles/biotrip/css/trip.css'
				   'bundles/biotrip/css/pikaday.css' filter="cssrewrite" output="css/*.css" %}
		<link rel="stylesheet" href="{{ asset_url }}" />
	{% endstylesheets %}

	{% javascripts 'bundles/biopublic/js/DragDrop.js'
				   'bundles/biotrip/js/pikaday.js' output="js/*.js" %}
		<script src="{{asset_url}}"></script>
	{% endjavascripts %}
{% endblock %}

{% block content %}
	<!-- <div id="switcher">
		<div style="text-align:center;">
			<span style="margin-right:60px;" id="formButton" class="link">Add Trip</span>
			<span id="globalButton" class="link">Change Settings</span>
		</div>

		<div id="formContainer">
			<h4>Add Trip</h4>
	
		</div>

		<div id="globalContainer" style="display:none;">
			<h4>Global Settings</h4>
			
		</div>
	</div> -->

	<table>
		<thead>
			<tr>
				<th>Trip</th>
				<th>Start</th>
				<th>End</th>
				<th>Spots Taken</th>
				<th>View</th>
				<th>Copy</th>
				<th>Edit</th>
				<th>Delete</th>
			</tr>
		</thead>
		<tbody>

		</tbody>
		<tfoot>
			<tr>
				<td colspan=8 class="link lonely add">add trip</td>
			</tr>
		</tfoot>
	</table>
{% endblock %}

{% block java %}
	{{ tinymce_init() }}
	<script>
		(function() {
			window.addEventListener('load', function() {
				var datetimes = document.querySelectorAll('input.datetime');
					for(var i = 0, datetime = null; datetime = datetimes[i]; i++) {
						new Pikaday({
							field: datetime,
							showTime: true
						});
					}
				}
			);
		})();
	</script>

	<script>
	loader = new Loader({
		'url': '{{ url('main_page')}}crud/',
		'bundle': 'trip',
		'entity': 'trip',
		'container' : {
			'sortFn': function(ob1, ob2) {
				return ob1.data.start < ob2.data.start;
			}
		},
		'buttons': { // added to each column (left to right order)
			'view': {
				'event': 'click', //optional
				'fn': function(event, self) {
					window.open(self.parser.parse('{{ url('view_trip', {'id':"ZZZZZZ"})|replace({'ZZZZZZ':'#{id}'}) }}', this.parent.data), '_blank')
				}
			},
			'copy': {
				'fn': function(event, self) {
					
				}
			}
		},
		'columns': {
			'title': null,
			'start': function(value, self, parser) {
				return parser.parseDate('#{m}/#{d}/#{y} #{H}:#{i}', new Date(value * 1000));
			},
			'end': function(value, self, parser) {
				return parser.parseDate('#{m}/#{d}/#{y} #{H}:#{i}', new Date(value * 1000));
			},
			'students': function(value, self, parser) {
				return value.length + "";
			}
		}
	});
	</script>
{% endblock %}